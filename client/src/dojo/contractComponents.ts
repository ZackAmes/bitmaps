/* Autogenerated file. Do not edit manually. */

import { defineComponent, Type as RecsType, World } from "@dojoengine/recs";

export function defineContractComponents(world: World) {
  return {
	  Moves: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, remaining: RecsType.Number, last_direction: RecsType.Number },
	      {
	        metadata: {
	          name: "Moves",
	          types: ["contractaddress","u8","enum"],
	          customTypes: ["Direction"],
	        },
	      }
	    );
	  })(),
	  Position: (() => {
	    return defineComponent(
	      world,
	      { player: RecsType.BigInt, vec: { x: RecsType.Number, y: RecsType.Number } },
	      {
	        metadata: {
	          name: "Position",
	          types: ["contractaddress","u32","u32"],
	          customTypes: ["Vec2"],
	        },
	      }
	    );
	  })(),
	  ERC721Balance: (() => {
	    return defineComponent(
	      world,
	      { token: RecsType.BigInt, account: RecsType.BigInt, amount: RecsType.BigInt },
	      {
	        metadata: {
	          name: "ERC721Balance",
	          types: ["contractaddress","contractaddress","u256"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  ERC721Meta: (() => {
	    return defineComponent(
	      world,
	      { token: RecsType.BigInt, name: RecsType.BigInt, symbol: RecsType.BigInt, base_uri: RecsType.BigInt },
	      {
	        metadata: {
	          name: "ERC721Meta",
	          types: ["contractaddress","felt252","felt252","felt252"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  ERC721OperatorApproval: (() => {
	    return defineComponent(
	      world,
	      { token: RecsType.BigInt, owner: RecsType.BigInt, operator: RecsType.BigInt, approved: RecsType.Boolean },
	      {
	        metadata: {
	          name: "ERC721OperatorApproval",
	          types: ["contractaddress","contractaddress","contractaddress","bool"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  ERC721Owner: (() => {
	    return defineComponent(
	      world,
	      { token: RecsType.BigInt, token_id: RecsType.BigInt, address: RecsType.BigInt },
	      {
	        metadata: {
	          name: "ERC721Owner",
	          types: ["contractaddress","u256","contractaddress"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
	  ERC721TokenApproval: (() => {
	    return defineComponent(
	      world,
	      { token: RecsType.BigInt, token_id: RecsType.BigInt, address: RecsType.BigInt },
	      {
	        metadata: {
	          name: "ERC721TokenApproval",
	          types: ["contractaddress","u256","contractaddress"],
	          customTypes: [],
	        },
	      }
	    );
	  })(),
  };
}
